import socket
import socketserver
import threading
import time
import os

path = os.path.abspath('.')
filename = 'a.txt'


# server
class Temp_Server(socketserver.StreamRequestHandler):

    def handle(self):
        if self.request.recv(20).decode() == 'get_data':
            self.request.sendall(filename.encode())
            if self.request.recv(20).decode() == 'ok':
                num = 1
                with open(os.path.join(path, filename), 'r') as f:
                    message = f.read(1024)
                    while len(message) == 1024:
                        self.request.sendall(message.encode())
                        f.seek(num * 1024)
                        num += 1
                        message = f.read(1024)
                    self.request.sendall(message.encode())
                    self.request.sendall('EOF'.encode())


# client
def temp_client():
    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        client.connect(('127.0.0.1', 20012))
        client.send('get_data'.encode())
        client_filename = client.recv(20).decode()
        print(client_filename)
        client.send('ok'.encode())
        message = client.recv(1024).decode()
        with open(os.path.join(path, client_filename + '1'), 'a') as f:
            while message != 'EOF':
                f.write(message)
                message = client.recv(1024).decode()
    finally:
        client.close()


if __name__ == '__main__':
    socket_server = socketserver.ThreadingTCPServer(('0.0.0.0', 20012), Temp_Server)
    threading.Thread(target=socket_server.serve_forever).start()
    time.sleep(1)
    temp_client()
